<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.labeling.demo.repository.InstanceUserMapper">
  <resultMap id="BaseResultMap" type="com.labeling.demo.entity.InstanceUser">
    <constructor>
      <idArg column="id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="username" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="instanceId" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="tag" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="taskId" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="tagTime" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="responseTime" javaType="java.lang.Float" jdbcType="REAL" />
    </constructor>
  </resultMap>

  <resultMap id="VoResultMap" type="com.labeling.demo.entity.vo.InstanceUserVO">
    <id property="id" column="id" />
    <result property="username" column="username"/>
    <result property="instanceId" column="instanceId"/>
    <result property="tag" column="tag" />
    <result property="taskId" column="taskId" />
    <result property="tagTime" column="tagTime" />
    <result property="responseTime" column="responseTime"/>
    <result property="item" column="item" />
    <result property="role" column="role" />
  </resultMap>

  <sql id="Base_Column_List">
    id, username, instanceId, tag, taskId, tagTime, responseTime
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_instance_user
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from tb_instance_user
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.labeling.demo.entity.InstanceUser">
    insert into tb_instance_user (id, username, instanceId, 
      tag, taskId, tagTime, responseTime)
    values (#{id,jdbcType=BIGINT}, #{username,jdbcType=VARCHAR}, #{instanceId,jdbcType=BIGINT}, 
      #{tag,jdbcType=VARCHAR}, #{taskId,jdbcType=INTEGER}, #{tagTime,jdbcType=TIMESTAMP}, 
      #{responseTime,jdbcType=REAL})
  </insert>
  <insert id="insertSelective" parameterType="com.labeling.demo.entity.InstanceUser">
    insert into tb_instance_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="instanceId != null">
        instanceId,
      </if>
      <if test="tag != null">
        tag,
      </if>
      <if test="taskId != null">
        taskId,
      </if>
      <if test="tagTime != null">
        tagTime,
      </if>
      <if test="responseTime != null">
        responseTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="instanceId != null">
        #{instanceId,jdbcType=BIGINT},
      </if>
      <if test="tag != null">
        #{tag,jdbcType=VARCHAR},
      </if>
      <if test="taskId != null">
        #{taskId,jdbcType=INTEGER},
      </if>
      <if test="tagTime != null">
        #{tagTime,jdbcType=TIMESTAMP},
      </if>
      <if test="responseTime != null">
        #{responseTime,jdbcType=REAL},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.labeling.demo.entity.InstanceUser">
    update tb_instance_user
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="instanceId != null">
        instanceId = #{instanceId,jdbcType=BIGINT},
      </if>
      <if test="tag != null">
        tag = #{tag,jdbcType=VARCHAR},
      </if>
      <if test="taskId != null">
        taskId = #{taskId,jdbcType=INTEGER},
      </if>
      <if test="tagTime != null">
        tagTime = #{tagTime,jdbcType=TIMESTAMP},
      </if>
      <if test="responseTime != null">
        responseTime = #{responseTime,jdbcType=REAL},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.labeling.demo.entity.InstanceUser">
    update tb_instance_user
    set username = #{username,jdbcType=VARCHAR},
      instanceId = #{instanceId,jdbcType=BIGINT},
      tag = #{tag,jdbcType=VARCHAR},
      taskId = #{taskId,jdbcType=INTEGER},
      tagTime = #{tagTime,jdbcType=TIMESTAMP},
      responseTime = #{responseTime,jdbcType=REAL}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <select id="findByPage" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from tb_instance_user WHERE username = #{username} and taskId = #{taskId}
    limit #{pager.offset}, #{pager.pageSize}
  </select>

  <insert id="save" parameterType="com.labeling.demo.entity.InstanceUser">
    insert into tb_instance_user (id, username, taskId, instanceId, tag, responseTime)
    values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{taskId, jdbcType=INTEGER}, #{instanceId,jdbcType=INTEGER},
      #{tag,jdbcType=VARCHAR}, #{responseTime, jdbcType=REAL})
    ON DUPLICATE KEY UPDATE
    instanceId = #{instanceId,jdbcType=BIGINT},
    username = #{username,jdbcType=VARCHAR},
    taskId = #{taskId,jdbcType=INTEGER},
    tag = #{tag,jdbcType=VARCHAR}
    responseTime = #{responseTime, jdbcType=REAL}
  </insert>

  <select id="findFullRecord" parameterType="java.lang.Long" resultMap="VoResultMap">
    select
    id, tu.username, ti.instanceId, tag, tiu.taskId, tagTime, responseTime, ti.item, tu.role
    from tb_instance_user tiu
    join tb_user tu on tiu.username = tu.username
    join tb_instance ti on tiu.instanceId = ti.instanceId
    where ti.instanceId = #{instanceId, jdbcType=BIGINT}
  </select>
</mapper>